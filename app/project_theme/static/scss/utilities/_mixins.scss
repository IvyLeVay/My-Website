// PROJECT
//---------------------------------------------
@mixin content-wrap{
	max-width: $max-width;
	margin: 0 auto;
}
// FUNCTIONS
//---------------------------------------------
@function parseInt($n) {
	@return $n / ($n * 0 + 1);
}
// intrinsic ratio percent
@function percent($width, $height){
	$percent: ( $height / $width )*100 + "%";
	@return #{$percent};
}

// HELPER MIXINS
//---------------------------------------------
@mixin border-radius($radii){
	-webkit-border-radius: $radii;
	-moz-border-radius: $radii;
	border-radius: $radii;
}
@mixin chevron($cDirection:"right", $cSize: 20px, $cWidth: 1px, $cColor: black) {
	content: '';
	display: inline-block;
	width: $cSize;
	height: $cSize;
	border-top: 1px solid $cColor;
	border-right: 1px solid $cColor;
	border-width: $cWidth;

	@if $cDirection == 'up'     { transform: rotate(-45deg); }
	@if $cDirection == 'right'  { transform: rotate(45deg); }
	@if $cDirection == 'down' 	{ transform: rotate(135deg); }
	@if $cDirection == 'left'   { transform: rotate(225deg); }
}
@mixin clearfix {
	*zoom:1;

	&:before,
	&:after {
		content:"";
		display:table;
	}
	&:after {
		clear:both;
	}
}
@mixin columns($count:null, $gap:null, $width:null, $rule: null) {
	@if $count != null{
		-webkit-column-count: $count;
		-moz-column-count: $count;
		column-count: $count;
	}
	@if $gap != null{
		-webkit-column-gap: $gap;
		-moz-column-gap: $gap;
		column-gap: $gap;
	}
	@else{
		-webkit-column-gap: 2em;
		-moz-column-gap: 2em;
		column-gap: 2em;
	}
	@if $width != null{
		-webkit-column-width: $width;
		-moz-column-width: $width;
		column-width: $width;
	}
	@if $rule != null{
		-webkit-column-rule: $rule;
		-moz-column-rule: $rule;
		column-rule: $rule;
	}
}
@mixin column-break-inside($rule:avoid){
	-webkit-column-break-inside: $rule;
	page-break-inside: $rule;
	break-inside: $rule;
}
@mixin image-replace{
	overflow: hidden;
	text-indent: -1000px;
}
@mixin linear-gradient($top-color, $bottom-color, $start-pos:0%, $stop-pos:100%) {
	background: $bottom-color;
	background: -moz-linear-gradient(top, $top-color $start-pos, $bottom-color $stop-pos);
	background: -webkit-gradient(linear, left bottom, right top, color-stop(0%,$top-color), color-stop($stop-pos,$bottom-color));
	background: -webkit-linear-gradient(top, $top-color $start-pos,$bottom-color $stop-pos);
	background: -o-linear-gradient(top, $top-color $start-pos,$bottom-color $stop-pos);
	background: -ms-linear-gradient(top, $top-color $start-pos,$bottom-color $stop-pos);
	background: linear-gradient(top, $top-color $start-pos,$bottom-color $stop-pos);
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$top-color}', EndColorStr='#{$bottom-color}');
}
@mixin placeholder($color) {
	:-moz-placeholder {
		color: $color;
	}
	::-webkit-input-placeholder {
		color: $color;
	}
	:-ms-input-placeholder {
  		color: $color;
	}
}
@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}